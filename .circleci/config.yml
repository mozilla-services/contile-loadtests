# These environment variables must be set in CircleCI UI
#
# DOCKERHUB_REPO - docker hub repo, format: <username>/<repo>
# DOCKER_USER    - login info for docker hub
# DOCKER_PASS
#
version: 2.1
commands:
  write-version:
    steps:
      - run:
          name: Create a version.json
          command: |
            # create a version.json per
            # https://github.com/mozilla-services/Dockerflow/blob/master/docs/version_object.md
            printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n' \
            "$CIRCLE_SHA1" \
            "$CIRCLE_TAG" \
            "$CIRCLE_PROJECT_USERNAME" \
            "$CIRCLE_PROJECT_REPONAME" \
            "$CIRCLE_BUILD_URL" > version.json
jobs:
  test:
    docker:
      - image: circleci/python
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
          = run:
            name: Login to Dockerhub
            command: |
              if [ "${DOCKER_USER}" == "" ] || [ "${DOCKER_PASS}" == "" ]; then
                echo "Skipping Login to DockerHub, credentials unavailable"
              else
                echo "${DOCKER_PASS}" | docker login -u="${DOCKER_USER}" --password-stdin
              fi
      - checkout
      - write-version
      - run:
          name: Install Docker test dependencies
          command: pip install flake8
      - run:
          name: flake8
          command: flake8 loadtest.py
      - run:
          name: Build Docker image
          command: docker build -t app:build .
      # save the built docker container into CircleCI's cache. This is
      # required since Workflows do not have the same remote docker instance.
      - run:
          name: docker save app:build
          command: |
            mkdir -p /home/circleci/cache
            docker save -o /home/circleci/cache/docker.tar "app:build"
      - save_cache:
          key: v1-{{ .Branch }}-{{ .Environment.CIRCLE_TAG }}-{{ epoch }}
          paths:
            - /home/circleci/cache
  deploy:
    docker:
      - image: docker:18.02.0-ce
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - setup_remote_docker
      - restore_cache:
          key: v1-{{ .Branch }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: Restore Docker image cache
          command: docker load -i /home/circleci/cache/docker.tar
      - run:
          name: Deploy to Dockerhub
          command: |
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              DOCKER_TAG="${CIRCLE_SHA1}"
            fi

            if echo "${CIRCLE_BRANCH}" | grep '^feature\..*' > /dev/null; then
              DOCKER_TAG="${CIRCLE_BRANCH}"
            fi

            if [ -n "${CIRCLE_TAG}" ]; then
              DOCKER_TAG="$CIRCLE_TAG"
            fi

            if [ -n "${DOCKER_TAG}" ]; then
              echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
              echo ${DOCKERHUB_REPO}:${DOCKER_TAG}
              docker tag app:build ${DOCKERHUB_REPO}:${DOCKER_TAG}
              docker images
              docker push "${DOCKERHUB_REPO}:${DOCKER_TAG}"
            else
              echo "Not pushing to dockerhub for tag=${CIRCLE_TAG} branch=${CIRCLE_BRANCH}"
            fi

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - test
          filters:
            tags:
              only: /.*/
